Practical 6 - Perform SVM classifiers with various kernels on the Iris dataset.

Open the jupyter and create new python file
And run following command to install scikit-learn

pip install -U scikit-learn â€“user


Code: 
import matplotlib.pyplot as plt
from sklearn import svm, datasets
from sklearn.inspection import DecisionBoundaryDisplay
iris = datasets.load_iris()
x = iris.data[:, :2]
y = iris.target
 
C = 1.0
models = (
    svm.SVC(kernel = "linear", C=C),
    svm.LinearSVC(C=C, max_iter=10000),
    svm.SVC(kernel="rbf", gamma=0.7, C=C),
    svm.SVC(kernel="poly", degree = 3, gamma = "auto", C=C),
)
models = (clf.fit(x,y) for clf in models)
titles = (
    "SVC with linear kernel",
    "LinearSVC (linear kernel)",
    "SVC with RBF kernel",
    "SVC with polynomial (degreee 3) kernel",
)
fig, sub = plt.subplots(2,2)
plt.subplots_adjust(wspace = 0.4, hspace = 0.4)
x0, x1 = x[:, 0], x[:, 1]
for clf, title, ax in zip(models, titles, sub.flatten()):
  disp = DecisionBoundaryDisplay.from_estimator(
      clf,
      x,
      response_method = "predict",
      cmap = plt.cm.coolwarm,
      alpha = 0.8,
      ax = ax,
      xlabel = iris.feature_names[0],
      ylabel = iris.feature_names[1],
  )
  ax.scatter(x0, x1, c=y, cmap=plt.cm.coolwarm, s=20, edgecolors="k")
  ax.set_xticks(())
  ax.set_yticks(())
  ax.set_title(title)
 
plt.show()
